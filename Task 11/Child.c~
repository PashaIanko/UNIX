#include <string.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/wait.h>

#define USAGE_ERR 2
#define CHILD_ERR 4
#define CHILD_EXEC_ERR 5
#define WAIT_ERR 7
#define SETENV_ERR 8
#define EXECVPE_ERR 9 

extern char **environ;

void test_env(const char * arg){
	printf("LOG: inside test_env: arg = %s\n", arg);
	char* env;
	env = getenv(arg);
	if(env == NULL) {
		printf("LOG: No env variable!\n");
	}
	printf("LOG:env variable = %s\n", env);
}

int main(int argc, char * argv[]){

	printf("LOG::child execution in child image process\n");
	
	int count = 0;
	//while (*environ++ != NULL){
	//	count ++;
	//}
	//printf("LOG: Number of env vars: %d\n", count);

//	const char* myvar = "MYVAR";
	test_env("PATH");
//	printf("%s\n", getenv("PATH"));
	test_env("MYVAR");
	
	return 0;
}
